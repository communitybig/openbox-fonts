#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# shellcheck source=/dev/null

export TERM=${TERM:-xterm}
export TERM=${TERM:-xterm-256color}

# Defining color variables (bold only)
export black="\033[1;30m"
export red="\033[1;31m"
export green="\033[1;32m"
export yellow="\033[1;33m"
export blue="\033[1;34m"
export magenta="\033[1;35m"
export cyan="\033[1;36m"
export white="\033[1;37m"
#
export COL_NC='\e[0m' # No Color
export COL_LIGHT_GREEN='\e[1;32m'
export COL_LIGHT_RED='\e[1;31m'
export TICK="${white}[${COL_LIGHT_GREEN}✓${COL_NC}${white}]"
export CROSS="${white}[${COL_LIGHT_RED}✗${COL_NC}${white}]"
export INFO="[i]"
export DONE="${COL_LIGHT_GREEN} done!${COL_NC}"
export OVER="\\r\\033[K"
export DOTPREFIX="  ${black}::${reset} "

# Setting variables for bold and reset
export bold="\033[1m"
export reset="\033[0m"
declare pkgname=openbox-fonts

msg() {
	local msg="$1"
	echo -e "${green}==>[${pkgname}] ${bold}${yellow}${msg}${reset}" >&2
}

log_ok() {  echo -e "  ${TICK} ${*}${reset}"; }
log_err() { echo -e "  ${CROSS} ${*}${reset}"; }

# Function executed after package installation
post_install() {
# Caching fonts
sh_cache_fonts(){
	  msg "Caching fonts..."
  	  fc-cache -f -v &>/dev/null
}
# Caching fonts
sh_cache_fonts
}

# Function executed before package upgrade
# pre_upgrade() {
#     echo "Preparing to upgrade the package..."
    # Example: Backup configuration files
    # cp /etc/mypackage/config.conf /etc/mypackage/config.conf.bak
# }

# Function executed after package upgrade
# post_upgrade() {
#     echo "Finalizing package upgrade..."
    # Usually, post_install is called here to ensure
    # all post-installation configurations are applied
#     post_install

    # Example: Check and update configuration files
    # if [ -f /etc/mypackage/config.conf.pacnew ]; then
    #     echo "New configuration file available. Please review /etc/mypackage/config.conf.pacnew"
    # fi
# }

# Function executed before package removal
# pre_remove() {
#     echo "Preparing to remove the package..."
    # Example: Stop services
    # systemctl stop myservice.service
    # systemctl disable myservice.service
# }

# Function executed after package removal
# post_remove() {
#     echo "Cleaning up after package removal..."
    # Example: Remove data directories created by the package
    # rm -rf /var/lib/mypackage

#     echo "If you want to remove all user data, run:"
#     echo "rm -rf /home/*/mypackage_data"
# }
